name: Taski main workflow

on:
  push:
    branches:
      - main

jobs:
  # Запуск тестирования приложения
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        # Получение исходного кода из репозитория
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install flake8==6.0.0 flake8-isort==6.0.0
          pip install -r ./backend/requirements.txt 

      - name: Test with flake8 and django tests
        # Добавляем env-переменные для доступа к БД
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_password
          POSTGRES_DB: django_db
          # Сервер БД запущен в Docker, но его порт проброшен на хост
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
        run: |
          python -m flake8 backend/
          cd backend/
          python manage.py test

  # Собрать и отправить образ приложения на Docker Hub
  build_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: tests  # Эта задача выполняется только после успешного выполнения tests
    steps:
      - name: Check out the repo
        # Получение исходного кода из репозитория
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        # Установка сборщика контейнеров Docker
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker
        # Авторизация на Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Используем секреты для безопасности
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to DockerHub
        # Сборка и отправка образа в Docker Hub
        uses: docker/build-push-action@v4
        with:
          # Параметр context: ./backend/ указывает, что нужный Dockerfile находится в ./backend/
          context: ./backend/
          # Параметр push: true указывает, что образ нужно не только собрать,
          # но и отправить на Docker Hub
          push: true
          # В параметре tags задаём название и тег для образа
          tags: ${{ secrets.DOCKER_USERNAME }}/taski_backend:latest
